<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!-- 
        @Author : Sunil K Sundaram
        @Date   : 21-May-17
        @Email  : sunil.ks@gmail.com
    -->
	<modelVersion>4.0.0</modelVersion>
    <groupId>com.iemr.common</groupId>
    <artifactId>1097-ui</artifactId>
    <version>1.0</version>
    <name>1097-ui</name>
    <packaging>war</packaging>

	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<old-api-url>10.152.3.99</old-api-url>
				<old-cti-url>10.208.122.99</old-cti-url>
				<new-api-url>10.152.3.99</new-api-url>
				<new-cti-url>10.208.122.99</new-cti-url>
			</properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
		</profile>
        <profile>
			<id>uat</id>
			<properties>            
				<old-api-url>10.152.3.99</old-api-url>
				<old-cti-url>10.208.122.99</old-cti-url>
				<new-api-url>deviemr.piramalswasthya.org</new-api-url>
				<new-cti-url>helplines.piramalswasthya.org</new-cti-url>    
			</properties>
		</profile>
        <profile>
			<id>local</id>
			<properties>            
				<old-api-url>10.152.3.99</old-api-url>
				<old-cti-url>10.208.122.99</old-cti-url>
				<new-api-url>localhost</new-api-url>
				<new-cti-url>localhost</new-cti-url>    
			</properties>
		</profile>
	</profiles>

    <!-- we could create individual properties similar to variables -->
    <!-- <properties>
        <ui-base-dir>iemrdash</ui-base-dir>
    </properties> -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <!-- install the necessary node_modules & compile in prod mode -->
    <build>
	    <finalName>1097ui-v1.0</finalName>
        <plugins>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                <filesets>
                    <fileset>
                    <directory>dist</directory>
                    <!-- if any that needs to be included or excluded     -->
                    <!-- using name in both would be a crime - pls avoid! -->
                    <!-- <includes>
                        <include>**/*.tmp</include>
                        <include>**/*.log</include>
                    </includes>
                    <excludes>
                        <exclude>**/important.log</exclude>
                        <exclude>**/another-important.log</exclude>
                    </excludes> -->
                    <followSymlinks>false</followSymlinks>
                    </fileset>
                </filesets>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <executions>
                    <execution>
                        <id>running npm install</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <echo>running npm install ---> ${build.timestamp}</echo>
                                <echo>exec-dir: ${project.build.directory}</echo>
                            </tasks>
                            <executable>npm</executable>
                            <!--<workingDirectory>${basedir}/${ui-base-dir}</workingDirectory>  --> 
                            <arguments>
                                <argument>install</argument>
                                <!-- use save-dev or save if you understand the consequences, else -->
                                <!-- please leave them alone & add appropriate npm dependencies in package.json -->
                                <!-- <argument> </argument> -->
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>running ng build --prod</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <echo>running ng build --prod ---> ${build.timestamp}</echo>
                                <echo>exec-dir: ${project.build.directory}</echo>
                                <echo>dist-dir: ${project.build.outputDirectory}</echo>
                            </tasks>
                            <!-- incase working dir is different use below -->
                            <!--<workingDirectory>${basedir}/${ui-base-dir}</workingDirectory>  -->    
                            <!-- <executable>C:\Users\kmuser\AppData\Roaming\npm\ng.cmd</executable> -->
                            <executable>ng.cmd</executable>
                            <arguments>
                                <argument>build</argument>
                                <argument>--prod</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- use following incase resources from other dirs -->
            <!--<plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/WEB-INF</outputDirectory>
                            <resources>          
                                <resource>
                                    <directory>dist</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>              
                        </configuration>            
                    </execution>
                </executions>
            </plugin> -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
				<executions>
					<execution>
						<id>properties-updated 1</id>
						<phase>process-resources</phase>
                        <!-- <phase>process-classes</phase> -->
                        <!-- <phase>prepare-package</phase> -->
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
                            <target>
								<!-- <echo message = "replacing/updating urls ${project.basedir} 1" /> -->
								<echo>replacing/updating urls ${project.basedir} 2</echo>
								<!-- <replaceregexp file="${project.basedir}/dist/main.*.bundle.js" match="${old-api-url}=(.*)" 
                                    replace="${new-api-url}=\1" flags="ig">
                                </replaceregexp>
                                <replaceregexp file="${project.basedir}/dist/main.*.bundle.js" match="${old-cti-url}" 
                                    replace="${new-cti-url}" flags="ig">
                                </replaceregexp> -->
                                <replaceregexp match="${old-api-url}" replace="${new-api-url}" flags="ig">
                                    <fileset dir="${project.basedir}/dist" includes="main.*.bundle.js"/>
                                </replaceregexp>
                                <replaceregexp match="${old-cti-url}" replace="${new-cti-url}" flags="ig">
                                    <fileset dir="${project.basedir}/dist" includes="main.*.bundle.js"/>
                                </replaceregexp>
                            </target>
						</configuration>
					</execution>
				</executions>
			</plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.4.2</version>
                <executions>
                    <execution>
                        <id>default-copy-resources</id>
                        <phase>prepare-package</phase>
                        <configuration>
                            <overwrite>true</overwrite>
                            <outputDirectory>${project.build.directory}/${project.artifactId}-${project.version}/WEB-INF/</outputDirectory>
                            <resources>
                                <resource>
                                <directory>${project.basedir}/dist</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <webResources>
                        <resource>
                        <!-- this is relative to the pom.xml directory -->
                        <directory>dist</directory>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>